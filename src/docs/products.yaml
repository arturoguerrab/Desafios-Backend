# openapi: 3.1.0
# info:
#   title: 'Ecommerce para Proyecto Final de Coderhouse'
#   version: '4.0.0'
#   description: 'API de prueba para el curso de Backend de Coderhouse 2023'
#   contact:
#     name: 'Alejandro Di Stefano'
# servers:
#   - url: 'http://localhost:8080'
paths:
  /api/products:
    get:
      summary: Get all products
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                code:
                  type: string
                price:
                  type: number
                status:
                  type: boolean
                stock:
                  type: number
                category:
                  type: string
                thumbnail:
                  type: string
                owner:
                  type: string  
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Error

  /api/products/{productId}:
    get:
      summary: Get a product by ID
      parameters:
        - name: productId
          description: ID of the product
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      summary: Update a product by ID
      parameters:
        - name: productId
          description: ID of the product
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                atributo_a_modificar_1:
                  type: string
                  required: true
                atributo_a_modificar_2:
                  type: number
                  required: true
                atributo_a_modificar_3:
                  type: number
                  required: boolean
                
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    delete:
      summary: Delete a product by ID
      parameters:
        - name: productId
          description: ID of the product
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        status:
          type: boolean
        stock:
          type: number
        category:
          type: string
        thumbnail:
          type: string
        owner:
          type: string
